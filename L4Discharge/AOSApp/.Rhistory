add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~meanUParaUnc,name="Q: Para Unc Top",type='scatter',mode='line',line=list(color='lightpink'),showlegend=T,legendgroup='group1')%>%
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~meanLParaUnc,name="Q: Para Unc Bottom",type='scatter',mode='none',fill = 'tonexty',fillcolor = 'lightpink',showlegend=T,legendgroup='group1')%>%
# H Uncertainty
add_trace(x=~as.POSIXct(roundDater,format="%Y-%m-%d %H:%M:%S"),y=~meanUHUnc,name="H: Unc Top",type='scatter',mode='line',line=list(color='lightgreen'),yaxis='y2',showlegend=T,legendgroup='group2')%>%
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~meanLHUnc,name="H: Unc Bottom",type='scatter',mode='none',fill = 'tonexty',fillcolor = 'lightgreen',yaxis='y2',showlegend=T,legendgroup='group2')%>%
# H and Q Series
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~meanQ, name="Q: Flow Series",type='scatter',mode='lines',line = list(color = 'black'),showlegend=T,legendgroup='group3')%>%
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~meanH, name="H: Stage Series",type='scatter',mode='lines',line = list(color = 'green'),yaxis='y2',showlegend=T,legendgroup='group4')%>%
# Empirical H and Q
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~streamDischarge,name="Q: Measured", type='scatter', mode='markers',marker = list(color = 'blue',size=8,line = list(color = "black",width = 1)),showlegend=T,legendgroup='group5')%>%
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~guage_Height,name='H: Measured (RC)',type='scatter',mode='markers',yaxis='y2',marker=list(color="purple",size=8,line = list(color = "black",width = 1)),showlegend=T,legendgroup='group6')%>%
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~guage_Height,name='H: Measured Guage Pressure',type='scatter',mode='markers',yaxis='y2',marker=list(color="orange",size=8,line = list(color = "black",width = 1)),showlegend=T,legendgroup='group6')%>%
layout(title = paste0(site," -- Continuos Discharge Time Series"),
xaxis=list(tick=14,title="dateTime"),
yaxis=list(side='left',
title='Discharge (lps)',
showgrid=FALSE,
zeroline=FALSE),
yaxis2=list(side='right',
overlaying="y",
title='Stage (m)',
showgrid=FALSE,
zeroline=FALSE),
#------
updatemenus=list(
list(
type='buttons',
buttons=list(
list(label='linear',
method='relayout',
args=list(list(yaxis=list(type='linear')))),
list(label='log',
method='relayout',
args=list(list(yaxis=list(type='log')))))))
)#end of layout
plott <- plot_ly(data=csd_continuousDischarge_sum)%>%
# Q Uncertainty
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~meanURemnUnc,name="Q: Remn Unc Top",type='scatter',mode='line',line=list(color='red'),showlegend=T,legendgroup='group1')%>%
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~meanLRemnUnc,name="Q: Remn Unc Bottom",type='scatter',mode='none',fill = 'tonexty',fillcolor = 'red',showlegend=T,legendgroup='group1')%>%
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~meanUParaUnc,name="Q: Para Unc Top",type='scatter',mode='line',line=list(color='lightpink'),showlegend=T,legendgroup='group1')%>%
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~meanLParaUnc,name="Q: Para Unc Bottom",type='scatter',mode='none',fill = 'tonexty',fillcolor = 'lightpink',showlegend=T,legendgroup='group1')%>%
# H Uncertainty
add_trace(x=~as.POSIXct(roundDater,format="%Y-%m-%d %H:%M:%S"),y=~meanUHUnc,name="H: Unc Top",type='scatter',mode='line',line=list(color='lightgreen'),yaxis='y2',showlegend=T,legendgroup='group2')%>%
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~meanLHUnc,name="H: Unc Bottom",type='scatter',mode='none',fill = 'tonexty',fillcolor = 'lightgreen',yaxis='y2',showlegend=T,legendgroup='group2')%>%
# H and Q Series
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~meanQ, name="Q: Flow Series",type='scatter',mode='lines',line = list(color = 'black'),showlegend=T,legendgroup='group3')%>%
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~meanH, name="H: Stage Series",type='scatter',mode='lines',line = list(color = 'green'),yaxis='y2',showlegend=T,legendgroup='group4')%>%
# Empirical H and Q
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~streamDischarge,name="Q: Measured", type='scatter', mode='markers',marker = list(color = 'blue',size=8,line = list(color = "black",width = 1)),showlegend=T,legendgroup='group5')%>%
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~guage_Height,name='H: Measured (RC)',type='scatter',mode='markers',yaxis='y2',marker=list(color="purple",size=8,line = list(color = "black",width = 1)),showlegend=T,legendgroup='group6')%>%
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~guage_Height,name='H: Measured Guage Pressure',type='scatter',mode='markers',yaxis='y2',marker=list(color="orange",size=8,line = list(color = "black",width = 1)),showlegend=T,legendgroup='group6')%>%
layout(title = paste0(site," -- Continuous Discharge Time Series"),
xaxis=list(tick=14,title="dateTime"),
yaxis=list(side='left',
title='Discharge (lps)',
showgrid=FALSE,
zeroline=FALSE),
yaxis2=list(side='right',
overlaying="y",
title='Stage (m)',
showgrid=FALSE,
zeroline=FALSE),
#------
updatemenus=list(
list(
type='buttons',
buttons=list(
list(label='linear',
method='relayout',
args=list(list(yaxis=list(type='linear')))),
list(label='log',
method='relayout',
args=list(list(yaxis=list(type='log')))))))
)#end of layout
site <- "LEWI"
#
# # Set file paths
# localBoxPath <- "C:/Users/nickerson/Box/L4-Discharge-Development-And-Testing/"
# Get NEON portal token -- Adjust this code to get your own API however you have it saved
#token <- read.table("~/APItoken.txt",encoding = "UTF-8",header = T,sep = "\t")
#APItoken <- as.character(token$APItoken[1])
# Get continuous discharge data from the NEON API
DP4.00130.001 <- neonUtilities::loadByProduct(
dpID="DP4.00130.001",
token = Sys.getenv("NEON_TOKEN"),
package = "expanded",
check.size = F,
site = site,
startdate = "2018-09",#Can set a date if you want, or keep it commented-out and pull date from all time
enddate = "2018-10"
)
# Unpack data frames to work with data tables individually
for(i in 1:length(DP4.00130.001)) {
assign(names(DP4.00130.001)[i], DP4.00130.001[[i]])
}
#
# or
# unlist all objects
# list2env(DP4.00130.001, .GlobalEnv)
# Get rating curve data
DP4.00133.001  <- neonUtilities::loadByProduct(
dpID="DP4.00133.001",
token = Sys.getenv("NEON_TOKEN"),
package = "expanded",
check.size = F,
site = site,
startdate = "2018-09",#Can set a date if you want, or keep it commented-out and pull date from all time
enddate = "2018-10"
)
# Unpack data frames to work with data tables individually
for(i in 1:length(DP4.00133.001)) {
assign(names(DP4.00133.001)[i], DP4.00133.001[[i]])
}
#or
# unlist all objects
#list2env(DP4.00133.001, .GlobalEnv)
## -- MAKE A MASTER SUMMARY TABLE WITH 1 HOUR RESOLUTION DATA -- ##
# Get a mergable form of empirical gauge and discharge measurement data frames, standardizing all the times to be 12 noon UTC
sdrc_gaugeDischargeMeas <- sdrc_gaugeDischargeMeas%>%
separate(gaugeEventID,c("site","date"),5,remove = F)%>%
mutate(date=paste0(as.Date(date,format="%Y%m%d")," 12:00:00"))
sdrc_gaugePressureRelationship <- sdrc_gaugePressureRelationship%>%
separate(gaugeEventID,c("site","date"),5,remove = F)%>%
mutate(date=paste0(as.Date(date,format="%Y%m%d")," 12:00:00"))
# Get continuous discharge summary table that will take 1 hour means of continuous data (discharge, stage and associated uncertainties)
csd_continuousDischarge_sum <- csd_continuousDischarge%>%
separate(endDate,"startDayHour",13,remove=F)%>%
mutate(startDayHour=paste0(startDayHour,":00:00"))%>%
# separate(endDate,"testDate",11,remove=F)%>%
# mutate(testDate=paste0(testDate,"00:00:00"))
group_by(startDayHour)%>%
summarize(meanQ=mean(maxpostDischarge,na.rm = T),
meanH=mean(equivalentStage,na.rm = T),
meanHUnc=mean(stageUnc,na.rm = T),
meanUpperRemnUnc=mean(withRemnUncQUpper2Std,na.rm = T),
meanLowerRemnUnc=mean(withRemnUncQLower2Std,na.rm = T),
meanUpperParaUnc=mean(withParaUncQUpper2Std,na.rm = T),
meanLowerParaUnc=mean(withParaUncQLower2Std,na.rm = T))%>%
mutate(meanLowerHUnc=meanH-meanHUnc,
meanUpperHUnc=meanH+meanHUnc)
# Add discrete stage and discharge to the summary table (NOTE: This is not done via a merge function (e.g., merge() or full_join()), rather date matching)
csd_continuousDischarge_sum$streamStageRC <- as.numeric("")
csd_continuousDischarge_sum$streamStageMetadata <- as.numeric("") # Metadata not associated with th RC
csd_continuousDischarge_sum$streamDischarge <- as.numeric("")
for (i in 1:nrow(csd_continuousDischarge_sum)) {
for (j in 1:nrow(sdrc_gaugeDischargeMeas)) {
if (csd_continuousDischarge_sum$startDayHour[i]==sdrc_gaugeDischargeMeas$date[j]) {
csd_continuousDischarge_sum$streamStageRC[i] <- sdrc_gaugeDischargeMeas$gaugeHeight[j]
csd_continuousDischarge_sum$streamDischarge[i] <- sdrc_gaugeDischargeMeas$streamDischarge[j]
}
}
}
for (i in 1:nrow(csd_continuousDischarge_sum)) {
for (j in 1:nrow(sdrc_gaugePressureRelationship)) {
if (csd_continuousDischarge_sum$startDayHour[i]==sdrc_gaugePressureRelationship$date[j]) {
csd_continuousDischarge_sum$streamStageMetadata[i] <- sdrc_gaugePressureRelationship$gaugeHeight[j]
}
}
}
csd_continuousDischarge_sum$streamStageMetadata[!is.na(csd_continuousDischarge_sum$streamStageRC)] <- NA  #remove streamStage dups from streamStageMetadata
# Plot flow series with uncertainty
reviewPlotly <- plot_ly(data=csd_continuousDischarge_sum)%>%
# Q Uncertainty
add_trace(x=~as.POSIXct(startDayHour,format="%Y-%m-%d %H:%M:%S"),y=~meanUpperRemnUnc,name="Q: Remn Unc Top",type='scatter',mode='line',line=list(color='red'),showlegend=T,legendgroup='group1')%>%
add_trace(x=~as.POSIXct(startDayHour,format="%Y-%m-%d %H:%M:%S"),y=~meanLowerRemnUnc,name="Q: Remn Unc Bottom",type='scatter',mode='none',fill = 'tonexty',fillcolor = 'red',showlegend=T,legendgroup='group1')%>%
add_trace(x=~as.POSIXct(startDayHour,format="%Y-%m-%d %H:%M:%S"),y=~meanUpperParaUnc,name="Q: Para Unc Top",type='scatter',mode='line',line=list(color='lightpink'),showlegend=T,legendgroup='group1')%>%
add_trace(x=~as.POSIXct(startDayHour,format="%Y-%m-%d %H:%M:%S"),y=~meanLowerParaUnc,name="Q: Para Unc Bottom",type='scatter',mode='none',fill = 'tonexty',fillcolor = 'lightpink',showlegend=T,legendgroup='group1')%>%
# H Uncertainty
add_trace(x=~as.POSIXct(startDayHour,format="%Y-%m-%d %H:%M:%S"),y=~meanUpperHUnc,name="H: Unc Top",type='scatter',mode='line',line=list(color='lightgreen'),yaxis='y2',showlegend=T,legendgroup='group2')%>%
add_trace(x=~as.POSIXct(startDayHour,format="%Y-%m-%d %H:%M:%S"),y=~meanLowerHUnc,name="H: Unc Bottom",type='scatter',mode='none',fill = 'tonexty',fillcolor = 'lightgreen',yaxis='y2',showlegend=T,legendgroup='group2')%>%
# H and Q Series
add_trace(x=~as.POSIXct(startDayHour,format="%Y-%m-%d %H:%M:%S"),y=~meanQ, name="Q: Flow Series",type='scatter',mode='lines',line = list(color = 'black'),showlegend=T,legendgroup='group3')%>%
add_trace(x=~as.POSIXct(startDayHour,format="%Y-%m-%d %H:%M:%S"),y=~meanH, name="H: Stage Series",type='scatter',mode='lines',line = list(color = 'green'),yaxis='y2',showlegend=T,legendgroup='group4')%>%
# Empirical H and Q
add_trace(x=~as.POSIXct(startDayHour,format="%Y-%m-%d %H:%M:%S"),y=~streamDischarge,name="Q: Measured", type='scatter', mode='markers',marker = list(color = 'blue',size=8,line = list(color = "black",width = 1)),showlegend=T,legendgroup='group5')%>%
add_trace(x=~as.POSIXct(startDayHour,format="%Y-%m-%d %H:%M:%S"),y=~streamStageRC,name='H: Measured (RC)',type='scatter',mode='markers',yaxis='y2',marker=list(color="purple",size=8,line = list(color = "black",width = 1)),showlegend=T,legendgroup='group6')%>%
add_trace(x=~as.POSIXct(startDayHour,format="%Y-%m-%d %H:%M:%S"),y=~streamStageMetadata,name='H: Measured (Metadata)',type='scatter',mode='markers',yaxis='y2',marker=list(color="orange",size=8,line = list(color = "black",width = 1)),showlegend=T,legendgroup='group6')%>%
# Plot Layout
layout(title = paste0(unique(csd_continuousDischarge$siteID)," -- Flow Series -- Stage Series -- Uncertainty -- Empirical H & Q"),
xaxis=list(tick=14,title="dateTime"),
yaxis=list(side='left',
title='Discharge (lps)',
showgrid=FALSE,
zeroline=FALSE),
yaxis2=list(side='right',
overlaying="y",
title='Stage (m)',
showgrid=FALSE,
zeroline=FALSE),
#------
updatemenus=list(
list(
type='buttons',
buttons=list(
list(label='linear',
method='relayout',
args=list(list(yaxis=list(type='linear')))),
list(label='log',
method='relayout',
args=list(list(yaxis=list(type='log'))))))))
reviewPlotly
library(plotly)
library(tidyverse)
# Only include one or the other gauge values - If there are duplicate gauge height records, this code will only keep 1
csd_continuousDischarge_sum$streamStageMetadata[!is.na(csd_continuousDischarge_sum$streamStageRC)] <- NA  #remove streamStage dups from streamStageMetadata
# Plot flow series with uncertainty
reviewPlotly <- plot_ly(data=csd_continuousDischarge_sum)%>%
# Q Uncertainty
add_trace(x=~as.POSIXct(startDayHour,format="%Y-%m-%d %H:%M:%S"),y=~meanUpperRemnUnc,name="Q: Remn Unc Top",type='scatter',mode='line',line=list(color='red'),showlegend=T,legendgroup='group1')%>%
add_trace(x=~as.POSIXct(startDayHour,format="%Y-%m-%d %H:%M:%S"),y=~meanLowerRemnUnc,name="Q: Remn Unc Bottom",type='scatter',mode='none',fill = 'tonexty',fillcolor = 'red',showlegend=T,legendgroup='group1')%>%
add_trace(x=~as.POSIXct(startDayHour,format="%Y-%m-%d %H:%M:%S"),y=~meanUpperParaUnc,name="Q: Para Unc Top",type='scatter',mode='line',line=list(color='lightpink'),showlegend=T,legendgroup='group1')%>%
add_trace(x=~as.POSIXct(startDayHour,format="%Y-%m-%d %H:%M:%S"),y=~meanLowerParaUnc,name="Q: Para Unc Bottom",type='scatter',mode='none',fill = 'tonexty',fillcolor = 'lightpink',showlegend=T,legendgroup='group1')%>%
# H Uncertainty
add_trace(x=~as.POSIXct(startDayHour,format="%Y-%m-%d %H:%M:%S"),y=~meanUpperHUnc,name="H: Unc Top",type='scatter',mode='line',line=list(color='lightgreen'),yaxis='y2',showlegend=T,legendgroup='group2')%>%
add_trace(x=~as.POSIXct(startDayHour,format="%Y-%m-%d %H:%M:%S"),y=~meanLowerHUnc,name="H: Unc Bottom",type='scatter',mode='none',fill = 'tonexty',fillcolor = 'lightgreen',yaxis='y2',showlegend=T,legendgroup='group2')%>%
# H and Q Series
add_trace(x=~as.POSIXct(startDayHour,format="%Y-%m-%d %H:%M:%S"),y=~meanQ, name="Q: Flow Series",type='scatter',mode='lines',line = list(color = 'black'),showlegend=T,legendgroup='group3')%>%
add_trace(x=~as.POSIXct(startDayHour,format="%Y-%m-%d %H:%M:%S"),y=~meanH, name="H: Stage Series",type='scatter',mode='lines',line = list(color = 'green'),yaxis='y2',showlegend=T,legendgroup='group4')%>%
# Empirical H and Q
add_trace(x=~as.POSIXct(startDayHour,format="%Y-%m-%d %H:%M:%S"),y=~streamDischarge,name="Q: Measured", type='scatter', mode='markers',marker = list(color = 'blue',size=8,line = list(color = "black",width = 1)),showlegend=T,legendgroup='group5')%>%
add_trace(x=~as.POSIXct(startDayHour,format="%Y-%m-%d %H:%M:%S"),y=~streamStageRC,name='H: Measured (RC)',type='scatter',mode='markers',yaxis='y2',marker=list(color="purple",size=8,line = list(color = "black",width = 1)),showlegend=T,legendgroup='group6')%>%
add_trace(x=~as.POSIXct(startDayHour,format="%Y-%m-%d %H:%M:%S"),y=~streamStageMetadata,name='H: Measured (Metadata)',type='scatter',mode='markers',yaxis='y2',marker=list(color="orange",size=8,line = list(color = "black",width = 1)),showlegend=T,legendgroup='group6')%>%
# Plot Layout
layout(title = paste0(unique(csd_continuousDischarge$siteID)," -- Flow Series -- Stage Series -- Uncertainty -- Empirical H & Q"),
xaxis=list(tick=14,title="dateTime"),
yaxis=list(side='left',
title='Discharge (lps)',
showgrid=FALSE,
zeroline=FALSE),
yaxis2=list(side='right',
overlaying="y",
title='Stage (m)',
showgrid=FALSE,
zeroline=FALSE),
#------
updatemenus=list(
list(
type='buttons',
buttons=list(
list(label='linear',
method='relayout',
args=list(list(yaxis=list(type='linear')))),
list(label='log',
method='relayout',
args=list(list(yaxis=list(type='log'))))))))
reviewPlotly
# # Set working directory and save .html file
# setwd(paste0(localBoxPath,site,"/continuousQ_review/"))
# htmlwidgets::saveWidget(as_widget(reviewPlotly),paste0(site,"_continuousQ_allWYs_portal.html"))
#https://www.youtube.com/watch?v=GZWCtEfF59o&list=PL6wLL_RojB5y747hFeeYME5nZq2cuaR7E&index=4
#https://www.youtube.com/watch?v=ANOHjzSUkXc&list=PL6wLL_RojB5y747hFeeYME5nZq2cuaR7E&index=5
# Load packages and set options
library(stageQCurve)
library(tidyverse)
library(neonUtilities)
library(htmlwidgets)
library(plotly)
library(tidyverse)
library(dplyr)
#install.Rtools(check = TRUE, check_r_update = TRUE, GUI = TRUE, ...)
devtools::install_github(repo = "NEONScience/NEON-stream-discharge/L4Discharge/stageQCurve", force = TRUE)
# Set input variables
site <- "HOPB"
startDate <-  "2018-10-01"
endDate <- "2019-09-30"
# Rating curve data queries need to span an entire water year to ensure we are getting all the appropriate data
searchIntervalStartDate <- as.character(stageQCurve::def.calc.WY.strt.end.date(searchIntervalStartDate = startDate)$startDate)
searchIntervalEndDate <- as.character(stageQCurve::def.calc.WY.strt.end.date(searchIntervalStartDate = endDate)$endDate)
# Get continuous discharge data from the NEON API
DP4.00130.001 <- neonUtilities::loadByProduct(
dpID="DP4.00130.001",
token = Sys.getenv("NEON_PAT"),
package = "expanded",
check.size = F,
site = site,
startdate = searchIntervalStartDate,
enddate = searchIntervalEndDate
)
# Get rating curve data from the NEON API
DP4.00133.001 <- neonUtilities::loadByProduct(
dpID="DP4.00133.001",
token = Sys.getenv("NEON_PAT"),
package = "basic",
check.size = F,
site = site,
startdate = searchIntervalStartDate,
enddate = searchIntervalEndDate
)
#extract date and site in gaugeDischargeMeas from DP4.00133.001
sdrc_gaugeDischargeMeas <- DP4.00133.001$sdrc_gaugeDischargeMeas%>%
separate(gaugeEventID,c("site","date"),5,remove = F)%>%
mutate(date=paste0(as.Date(date,format="%Y%m%d")," 20:00:00"))
#extract continuous discharge data and gauge-pressure relationship data from DP4.00130.001
csd_continuousDischarge <- DP4.00130.001$csd_continuousDischarge
sdrc_gaugePressureRelationship <- DP4.00130.001$sdrc_gaugePressureRelationship
# rounding endDate to the nearest 20 minute minute
csd_continuousDischarge$roundDate <- lubridate::round_date(csd_continuousDischarge$endDate, "20 mins")
sdrc_gaugePressureRelationship$newDate <- lubridate::round_date(sdrc_gaugePressureRelationship$endDate, "20 mins")
#creating summary table for variables and  uncertainties to be included
continuousDischarge_sum <- csd_continuousDischarge%>%
group_by(roundDate)%>%
summarize(meanQ=mean(maxpostDischarge,na.rm = T),
meanH=mean(equivalentStage,na.rm = T),
meanHUnc=mean(stageUnc,na.rm = T),
meanURemnUnc=mean(withRemnUncQUpper2Std,na.rm = T),
meanLRemnUnc=mean(withRemnUncQLower2Std,na.rm = T),
meanUParaUnc=mean(withParaUncQUpper2Std,na.rm = T),
meanLParaUnc=mean(withParaUncQLower2Std,na.rm = T))%>%
mutate(meanLHUnc=meanH-meanHUnc,
meanUHUnc=meanH+meanHUnc)
sdrc_gaugeDischargeMeas$date <- as.POSIXct(sdrc_gaugeDischargeMeas$date)
continuousDischarge_sum$roundDate <- as.POSIXct(continuousDischarge_sum$roundDate)
sdrc_gaugePressureRelationship$newDate <- as.POSIXct(sdrc_gaugePressureRelationship$newDate)
#changing var name guageHeight of guagePressureRelationship
sdrc_gaugePressureRelationship$guage_Height <- sdrc_gaugePressureRelationship$gaugeHeight
sdrc_gaugePressureRelationship <- sdrc_gaugePressureRelationship %>%
select(guage_Height, newDate)
#joining gauge discharge vars to continuous summary table
continuousDischarge_sum <- full_join(continuousDischarge_sum, sdrc_gaugeDischargeMeas, by = c("roundDate" = "date")) %>%
select(roundDate, meanH, meanQ, meanHUnc, meanURemnUnc,meanLRemnUnc,
meanUParaUnc,meanLParaUnc,meanLHUnc,meanUHUnc, gaugeHeight,streamDischarge)
#joining guagepressure to  continuoussummary table
continuousDischarge_sum <- full_join(continuousDischarge_sum, sdrc_gaugePressureRelationship, by =c("roundDate" = "newDate"))
#plotting with uncertainty
plott <- plot_ly(data=csd_continuousDischarge_sum)%>%
# Q Uncertainty
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~meanURemnUnc,name="Q: Remn Unc Top",type='scatter',mode='line',line=list(color='red'),showlegend=T,legendgroup='group1')%>%
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~meanLRemnUnc,name="Q: Remn Unc Bottom",type='scatter',mode='none',fill = 'tonexty',fillcolor = 'red',showlegend=T,legendgroup='group1')%>%
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~meanUParaUnc,name="Q: Para Unc Top",type='scatter',mode='line',line=list(color='lightpink'),showlegend=T,legendgroup='group1')%>%
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~meanLParaUnc,name="Q: Para Unc Bottom",type='scatter',mode='none',fill = 'tonexty',fillcolor = 'lightpink',showlegend=T,legendgroup='group1')%>%
# H Uncertainty
add_trace(x=~as.POSIXct(roundDater,format="%Y-%m-%d %H:%M:%S"),y=~meanUHUnc,name="H: Unc Top",type='scatter',mode='line',line=list(color='lightgreen'),yaxis='y2',showlegend=T,legendgroup='group2')%>%
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~meanLHUnc,name="H: Unc Bottom",type='scatter',mode='none',fill = 'tonexty',fillcolor = 'lightgreen',yaxis='y2',showlegend=T,legendgroup='group2')%>%
# H and Q Series
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~meanQ, name="Q: Flow Series",type='scatter',mode='lines',line = list(color = 'black'),showlegend=T,legendgroup='group3')%>%
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~meanH, name="H: Stage Series",type='scatter',mode='lines',line = list(color = 'green'),yaxis='y2',showlegend=T,legendgroup='group4')%>%
# Empirical H and Q
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~streamDischarge,name="Q: Measured", type='scatter', mode='markers',marker = list(color = 'blue',size=8,line = list(color = "black",width = 1)),showlegend=T,legendgroup='group5')%>%
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~guage_Height,name='H: Measured (RC)',type='scatter',mode='markers',yaxis='y2',marker=list(color="purple",size=8,line = list(color = "black",width = 1)),showlegend=T,legendgroup='group6')%>%
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~guage_Height,name='H: Measured Guage Pressure',type='scatter',mode='markers',yaxis='y2',marker=list(color="orange",size=8,line = list(color = "black",width = 1)),showlegend=T,legendgroup='group6')%>%
layout(title = paste0(site," -- Continuous Discharge Time Series"),
xaxis=list(tick=14,title="dateTime"),
yaxis=list(side='left',
title='Discharge (lps)',
showgrid=FALSE,
zeroline=FALSE),
yaxis2=list(side='right',
overlaying="y",
title='Stage (m)',
showgrid=FALSE,
zeroline=FALSE),
#------
updatemenus=list(
list(
type='buttons',
buttons=list(
list(label='linear',
method='relayout',
args=list(list(yaxis=list(type='linear')))),
list(label='log',
method='relayout',
args=list(list(yaxis=list(type='log')))))))
)#end of layout
#plotting with uncertainty
plott <- plot_ly(data=continuousDischarge_sum)%>%
# Q Uncertainty
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~meanURemnUnc,name="Q: Remn Unc Top",type='scatter',mode='line',line=list(color='red'),showlegend=T,legendgroup='group1')%>%
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~meanLRemnUnc,name="Q: Remn Unc Bottom",type='scatter',mode='none',fill = 'tonexty',fillcolor = 'red',showlegend=T,legendgroup='group1')%>%
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~meanUParaUnc,name="Q: Para Unc Top",type='scatter',mode='line',line=list(color='lightpink'),showlegend=T,legendgroup='group1')%>%
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~meanLParaUnc,name="Q: Para Unc Bottom",type='scatter',mode='none',fill = 'tonexty',fillcolor = 'lightpink',showlegend=T,legendgroup='group1')%>%
# H Uncertainty
add_trace(x=~as.POSIXct(roundDater,format="%Y-%m-%d %H:%M:%S"),y=~meanUHUnc,name="H: Unc Top",type='scatter',mode='line',line=list(color='lightgreen'),yaxis='y2',showlegend=T,legendgroup='group2')%>%
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~meanLHUnc,name="H: Unc Bottom",type='scatter',mode='none',fill = 'tonexty',fillcolor = 'lightgreen',yaxis='y2',showlegend=T,legendgroup='group2')%>%
# H and Q Series
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~meanQ, name="Q: Flow Series",type='scatter',mode='lines',line = list(color = 'black'),showlegend=T,legendgroup='group3')%>%
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~meanH, name="H: Stage Series",type='scatter',mode='lines',line = list(color = 'green'),yaxis='y2',showlegend=T,legendgroup='group4')%>%
# Empirical H and Q
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~streamDischarge,name="Q: Measured", type='scatter', mode='markers',marker = list(color = 'blue',size=8,line = list(color = "black",width = 1)),showlegend=T,legendgroup='group5')%>%
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~guage_Height,name='H: Measured (RC)',type='scatter',mode='markers',yaxis='y2',marker=list(color="purple",size=8,line = list(color = "black",width = 1)),showlegend=T,legendgroup='group6')%>%
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~guage_Height,name='H: Measured Guage Pressure',type='scatter',mode='markers',yaxis='y2',marker=list(color="orange",size=8,line = list(color = "black",width = 1)),showlegend=T,legendgroup='group6')%>%
layout(title = paste0(site," -- Continuous Discharge Time Series"),
xaxis=list(tick=14,title="dateTime"),
yaxis=list(side='left',
title='Discharge (lps)',
showgrid=FALSE,
zeroline=FALSE),
yaxis2=list(side='right',
overlaying="y",
title='Stage (m)',
showgrid=FALSE,
zeroline=FALSE),
#------
updatemenus=list(
list(
type='buttons',
buttons=list(
list(label='linear',
method='relayout',
args=list(list(yaxis=list(type='linear')))),
list(label='log',
method='relayout',
args=list(list(yaxis=list(type='log')))))))
)#end of layout
#create an html plot
htmlwidgets::saveWidget(as_widget(plott),paste0(site,"_continuousQ_allWYs.html"))
plott
#plotting with uncertainty
plott <- plot_ly(data=continuousDischarge_sum)%>%
# Q Uncertainty
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~meanURemnUnc,name="Q: Remn Unc Top",type='scatter',mode='line',line=list(color='red'),showlegend=T,legendgroup='group1')%>%
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~meanLRemnUnc,name="Q: Remn Unc Bottom",type='scatter',mode='none',fill = 'tonexty',fillcolor = 'red',showlegend=T,legendgroup='group1')%>%
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~meanUParaUnc,name="Q: Para Unc Top",type='scatter',mode='line',line=list(color='lightpink'),showlegend=T,legendgroup='group1')%>%
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~meanLParaUnc,name="Q: Para Unc Bottom",type='scatter',mode='none',fill = 'tonexty',fillcolor = 'lightpink',showlegend=T,legendgroup='group1')%>%
# H Uncertainty
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~meanUHUnc,name="H: Unc Top",type='scatter',mode='line',line=list(color='lightgreen'),yaxis='y2',showlegend=T,legendgroup='group2')%>%
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~meanLHUnc,name="H: Unc Bottom",type='scatter',mode='none',fill = 'tonexty',fillcolor = 'lightgreen',yaxis='y2',showlegend=T,legendgroup='group2')%>%
# H and Q Series
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~meanQ, name="Q: Flow Series",type='scatter',mode='lines',line = list(color = 'black'),showlegend=T,legendgroup='group3')%>%
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~meanH, name="H: Stage Series",type='scatter',mode='lines',line = list(color = 'green'),yaxis='y2',showlegend=T,legendgroup='group4')%>%
# Empirical H and Q
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~streamDischarge,name="Q: Measured", type='scatter', mode='markers',marker = list(color = 'blue',size=8,line = list(color = "black",width = 1)),showlegend=T,legendgroup='group5')%>%
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~guage_Height,name='H: Measured (RC)',type='scatter',mode='markers',yaxis='y2',marker=list(color="purple",size=8,line = list(color = "black",width = 1)),showlegend=T,legendgroup='group6')%>%
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~guage_Height,name='H: Measured Guage Pressure',type='scatter',mode='markers',yaxis='y2',marker=list(color="orange",size=8,line = list(color = "black",width = 1)),showlegend=T,legendgroup='group6')%>%
layout(title = paste0(site," -- Continuous Discharge Time Series"),
xaxis=list(tick=14,title="dateTime"),
yaxis=list(side='left',
title='Discharge (lps)',
showgrid=FALSE,
zeroline=FALSE),
yaxis2=list(side='right',
overlaying="y",
title='Stage (m)',
showgrid=FALSE,
zeroline=FALSE),
#------
updatemenus=list(
list(
type='buttons',
buttons=list(
list(label='linear',
method='relayout',
args=list(list(yaxis=list(type='linear')))),
list(label='log',
method='relayout',
args=list(list(yaxis=list(type='log')))))))
)#end of layout
plott
#create an html plot
htmlwidgets::saveWidget(as_widget(plott),paste0(site,"_continuousQ_allWYs.html"))
#plotting with uncertainty
plott <- plot_ly(data=continuousDischarge_sum)%>%
# Q Uncertainty
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~meanURemnUnc,name="Q: Remn Unc Top",type='scatter',mode='line',line=list(color='red'),showlegend=T,legendgroup='group1')%>%
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~meanLRemnUnc,name="Q: Remn Unc Bottom",type='scatter',mode='none',fill = 'tonexty',fillcolor = 'red',showlegend=T,legendgroup='group1')%>%
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~meanUParaUnc,name="Q: Para Unc Top",type='scatter',mode='line',line=list(color='lightpink'),showlegend=T,legendgroup='group1')%>%
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~meanLParaUnc,name="Q: Para Unc Bottom",type='scatter',mode='none',fill = 'tonexty',fillcolor = 'lightpink',showlegend=T,legendgroup='group1')%>%
# H Uncertainty
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~meanUHUnc,name="H: Unc Top",type='scatter',mode='line',line=list(color='lightgreen'),yaxis='y2',showlegend=T,legendgroup='group2')%>%
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~meanLHUnc,name="H: Unc Bottom",type='scatter',mode='none',fill = 'tonexty',fillcolor = 'lightgreen',yaxis='y2',showlegend=T,legendgroup='group2')%>%
# H and Q Series
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~meanQ, name="Q: Flow Series",type='scatter',mode='lines',line = list(color = 'black'),showlegend=T,legendgroup='group3')%>%
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~meanH, name="H: Stage Series",type='scatter',mode='lines',line = list(color = 'green'),yaxis='y2',showlegend=T,legendgroup='group4')%>%
# Empirical H and Q
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~streamDischarge,name="Q: Measured", type='scatter', mode='markers',marker = list(color = 'blue',size=8,line = list(color = "black",width = 1)),showlegend=T,legendgroup='group5')%>%
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~guage_Height,name='H: Measured (RC)',type='scatter',mode='markers',yaxis='y2',marker=list(color="purple",size=8,line = list(color = "black",width = 1)),showlegend=T,legendgroup='group6')%>%
add_trace(x=~as.POSIXct(roundDate,format="%Y-%m-%d %H:%M:%S"),y=~guage_Height,name='H: Measured Guage Pressure',type='scatter',mode='markers',yaxis='y2',marker=list(color="orange",size=8,line = list(color = "black",width = 1)),showlegend=T,legendgroup='group6')%>%
layout(title = paste0(site," -- Continuous Discharge Time Series"),
xaxis=list(tick=14,title="dateTime"),
yaxis=list(side='left',
title='Discharge (lps)',
showgrid=FALSE,
zeroline=FALSE),
yaxis2=list(side='right',
overlaying="y",
title='Stage (m)',
showgrid=FALSE,
zeroline=FALSE),
#------
updatemenus=list(
list(
type='buttons',
buttons=list(
list(label='linear',
method='relayout',
args=list(list(yaxis=list(type='linear')))),
list(label='log',
method='relayout',
args=list(list(yaxis=list(type='log')))))))
)#end of layout
#plott
#create an html plot
htmlwidgets::saveWidget(as_widget(plott),paste0(site,"_continuousQ_allWYs.html"))
library(shiny); runApp('GitHub/NEON-stream-discharge/L4Discharge/AOSApp/AOS_App.R')
runApp('GitHub/NEON-stream-discharge/L4Discharge/AOSApp/AOS_App.R')
runApp('GitHub/NEON-stream-discharge/L4Discharge/AOSApp/AOS_App.R')
runApp('GitHub/NEON-stream-discharge/L4Discharge/AOSApp/AOS_App.R')
getwd()
#importing domain sites csv, map your own pc
#productList <- read_csv("productList.csv")
productList <- read.csv("aqu_dischargeDomainSiteList.csv")
setwd("~/GitHub/NEON-stream-discharge/L4Discharge/AOSApp")
#importing domain sites csv, map your own pc
#productList <- read_csv("productList.csv")
productList <- read.csv("aqu_dischargeDomainSiteList.csv")
runApp('AOS_App.R')
runApp('AOS_App.R')
runApp('AOS_App.R')
runApp('AOS_App.R')
runApp('AOS_App.R')
runApp('AOS_App.R')
library(neonUtilities)
library(neonUtilities)
