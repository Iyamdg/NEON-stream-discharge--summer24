siteID <- 'POSE'
#The end date of the geomorphology survey (YYYYMMDD).
surveyDate<-'20180221'
#Stipulate 4-digit site code, underscore, and survey year (ex: HOPB_2017).
surveyID <- "POSE_2018"
#Queues a directory that contains file paths for each site per survey date.
siteDirectory<-read.csv('N:/Science/AQU/Geomorphology_Survey_Data/inputDirectory.csv',head=T,sep=",",stringsAsFactors = F)
#Creates dataframe that contains survey data.
filePath <- siteDirectory$filePath[which(siteDirectory$surveyID==surveyID)]
surveyShapefileName <- siteDirectory$surveyShapefileName[which(siteDirectory$surveyID==surveyID)]
surveyPts <- readOGR(filePath,surveyShapefileName)
surveyPtsDF <- as.data.frame(surveyPts)
#Working directory where files will be output.
wdir<-paste('C:/Users/nharrison/Documents/GitHub/landWaterSoilIPT/streamMorpho/ScienceProcessingCode/R_Metrics',siteID,'Raw_Data',sep="/")
#wdir<-paste('C:/Users/kcawley/Documents/GitHub/landWaterSoilIPT/streamMorpho/ScienceProcessingCode/R_Metrics',siteID,'Raw_Data',sep="/")
#Creates dataframe of all points associated with transect DSC1.
dischargePointsXS1<-subset(surveyPtsDF,mapCode=="Transect_DSC1")
dischargePointsXS1<-dischargePointsXS1[order(dischargePointsXS1$N),]
rownames(dischargePointsXS1)<-seq(length=nrow(dischargePointsXS1))
View(dischargePointsXS1)
#NEON Domain number (ex: D01).
domainID<-'D04'
#Four-digit NEON site code (ex: HOPB).
siteID <- 'CUPE'
#The end date of the geomorphology survey (YYYYMMDD).
surveyDate<-'20170810'
#Stipulate 4-digit site code, underscore, and survey year (ex: HOPB_2017).
surveyID <- "CUPE_2017"
#Queues a directory that contains file paths for each site per survey date.
siteDirectory<-read.csv('N:/Science/AQU/Geomorphology_Survey_Data/inputDirectory.csv',head=T,sep=",",stringsAsFactors = F)
#Creates dataframe that contains survey data.
filePath <- siteDirectory$filePath[which(siteDirectory$surveyID==surveyID)]
surveyShapefileName <- siteDirectory$surveyShapefileName[which(siteDirectory$surveyID==surveyID)]
surveyPts <- readOGR(filePath,surveyShapefileName)
surveyPtsDF <- as.data.frame(surveyPts)
#Working directory where files will be output.
wdir<-paste('C:/Users/nharrison/Documents/GitHub/landWaterSoilIPT/streamMorpho/ScienceProcessingCode/R_Metrics',siteID,'Raw_Data',sep="/")
#wdir<-paste('C:/Users/kcawley/Documents/GitHub/landWaterSoilIPT/streamMorpho/ScienceProcessingCode/R_Metrics',siteID,'Raw_Data',sep="/")
#Creates dataframe of all points associated with transect DSC1.
dischargePointsXS1<-subset(surveyPtsDF,mapCode=="Transect_DSC1")
dischargePointsXS1<-dischargePointsXS1[order(dischargePointsXS1$N),]
rownames(dischargePointsXS1)<-seq(length=nrow(dischargePointsXS1))
View(siteDirectory)
View(dischargePointsXS1)
View(surveyPtsDF)
#NEON Domain number (ex: D01).
domainID<-'D04'
#Four-digit NEON site code (ex: HOPB).
siteID <- 'CUPE'
#The end date of the geomorphology survey (YYYYMMDD).
surveyDate<-'20170810'
#Stipulate 4-digit site code, underscore, and survey year (ex: HOPB_2017).
surveyID <- "CUPE_2017"
#Queues a directory that contains file paths for each site per survey date.
siteDirectory<-read.csv('N:/Science/AQU/Geomorphology_Survey_Data/inputDirectory.csv',head=T,sep=",",stringsAsFactors = F)
#Creates dataframe that contains survey data.
filePath <- siteDirectory$filePath[which(siteDirectory$surveyID==surveyID)]
surveyShapefileName <- siteDirectory$surveyShapefileName[which(siteDirectory$surveyID==surveyID)]
surveyPts <- readOGR(filePath,surveyShapefileName)
surveyPtsDF <- as.data.frame(surveyPts)
#Working directory where files will be output.
wdir<-paste('C:/Users/nharrison/Documents/GitHub/landWaterSoilIPT/streamMorpho/ScienceProcessingCode/R_Metrics',siteID,'Raw_Data',sep="/")
#wdir<-paste('C:/Users/kcawley/Documents/GitHub/landWaterSoilIPT/streamMorpho/ScienceProcessingCode/R_Metrics',siteID,'Raw_Data',sep="/")
#Creates dataframe of all points associated with transect DSC1.
dischargePointsXS1<-subset(surveyPtsDF,MAPCODE=="Transect_DSC1")
dischargePointsXS1<-dischargePointsXS1[order(dischargePointsXS1$N),]
rownames(dischargePointsXS1)<-seq(length=nrow(dischargePointsXS1))
View(dischargePointsXS1)
#NEON Domain number (ex: D01).
domainID<-'D04'
#Four-digit NEON site code (ex: HOPB).
siteID <- 'CUPE'
#The end date of the geomorphology survey (YYYYMMDD).
surveyDate<-'20180315'
#Stipulate 4-digit site code, underscore, and survey year (ex: HOPB_2017).
surveyID <- "CUPE_2018"
#Queues a directory that contains file paths for each site per survey date.
siteDirectory<-read.csv('N:/Science/AQU/Geomorphology_Survey_Data/inputDirectory.csv',head=T,sep=",",stringsAsFactors = F)
#Creates dataframe that contains survey data.
filePath <- siteDirectory$filePath[which(siteDirectory$surveyID==surveyID)]
surveyShapefileName <- siteDirectory$surveyShapefileName[which(siteDirectory$surveyID==surveyID)]
surveyPts <- readOGR(filePath,surveyShapefileName)
surveyPtsDF <- as.data.frame(surveyPts)
#Working directory where files will be output.
wdir<-paste('C:/Users/nharrison/Documents/GitHub/landWaterSoilIPT/streamMorpho/ScienceProcessingCode/R_Metrics',siteID,'Raw_Data',sep="/")
#wdir<-paste('C:/Users/kcawley/Documents/GitHub/landWaterSoilIPT/streamMorpho/ScienceProcessingCode/R_Metrics',siteID,'Raw_Data',sep="/")
#Creates dataframe of all points associated with transect DSC1.
dischargePointsXS1<-subset(surveyPtsDF,MAPCODE=="Transect_DSC1")
dischargePointsXS1<-dischargePointsXS1[order(dischargePointsXS1$N),]
rownames(dischargePointsXS1)<-seq(length=nrow(dischargePointsXS1))
View(siteDirectory)
View(surveyPtsDF)
#Sets plot1 settings.
xAxisTitle1<-list(title="Easting (m)",zeroline=FALSE)
yAxisTitle1<-list(title="Northing  (m)",zeroline=FALSE)
font<-list(size=12,color='black')
#Plot the cross section by easting and northing data.
plot_ly(data=dischargePointsXS1,x=~E, y=~N, name='Easting vs Northing', type='scatter', mode='markers', text=~name)%>%
layout(title = siteID, xaxis=xAxisTitle1, yaxis=yAxisTitle1)
#Sets plot1 settings.
xAxisTitle1<-list(title="Easting (m)",zeroline=FALSE)
yAxisTitle1<-list(title="Northing  (m)",zeroline=FALSE)
font<-list(size=12,color='black')
#Plot the cross section by easting and northing data.
plot_ly(data=dischargePointsXS1,x=~E, y=~N, name='Easting vs Northing', type='scatter', mode='markers', text=~name)%>%
layout(title = siteID, xaxis=xAxisTitle1, yaxis=yAxisTitle1)
#load packages
require(rgdal)
library(rgdal)
library(plotly)
#Plot the cross section by easting and northing data.
plot_ly(data=dischargePointsXS1,x=~E, y=~N, name='Easting vs Northing', type='scatter', mode='markers', text=~name)%>%
layout(title = siteID, xaxis=xAxisTitle1, yaxis=yAxisTitle1)
#Manually select NorthStart and EastStart coordinates
dischargeXS1NorthStart<-dischargePointsXS1$N[1]
dischargeXS1EastStart<-dischargePointsXS1$E[1]
#Manually select NorthStart and EastStart coordinates
dischargeXS1NorthStart<-dischargePointsXS1$N[2]
dischargeXS1EastStart<-dischargePointsXS1$E[2]
#Assigns a raw Distance value to each point relative to the NorthStart and EastStart coordinates.
for(i in 1:(length(dischargePointsXS1$name))){
dischargeXS1PointN<-dischargePointsXS1$N[i]
dischargeXS1PointE<-dischargePointsXS1$E[i]
dischargePointsXS1$DistanceRaw[i]<-sqrt(((dischargeXS1PointN-dischargeXS1NorthStart)^2)+((dischargeXS1PointE-dischargeXS1EastStart)^2))
}
#To manually select ReferenceDistance:
dischargeXS1ReferenceDistance<-dischargePointsXS1$DistanceRaw[1]
#Sets Horizontal adjustment value based on reference point coordinate.
dischargeXS1HorizontalAdjust<-0-dischargeXS1ReferenceDistance
#Transforms raw distance to adjusted distance based on reference distance point.
for(i in 1:(length(dischargePointsXS1$name))){
dischargePointsXS1$DistanceAdj[i]<-dischargePointsXS1$DistanceRaw[i]+dischargeXS1HorizontalAdjust
}
#Plot the cross-section again to check reference values and ensure that the profile is being viewed from left to right bank.
#Sets plot2 settings.
xAxisTitle2<-list(title="Distance (m)",zeroline=FALSE)
yAxisTitle2<-list(title="Elevation  (m)",zeroline=FALSE)
font<-list(size=12,color='black')
#Plot the cross section by easting and northing data.
plot_ly(data=dischargePointsXS1,x=~DistanceAdj, y=~H, name='Distance vs Elevation', type='scatter', mode='lines+markers', text=~name)%>%
layout(title = siteID, xaxis=xAxisTitle2, yaxis=yAxisTitle2)
#load packages
require(rgdal)
library(rgdal)
library(plotly)
#NEON Domain number (ex: D01).
domainID<-'D04'
#Four-digit NEON site code (ex: HOPB).
siteID <- 'CUPE'
#The end date of the geomorphology survey (YYYYMMDD).
surveyDate<-'20180315'
#Stipulate 4-digit site code, underscore, and survey year (ex: HOPB_2017).
surveyID <- "CUPE_2018"
#Queues a directory that contains file paths for each site per survey date.
siteDirectory<-read.csv('N:/Science/AQU/Geomorphology_Survey_Data/inputDirectory.csv',head=T,sep=",",stringsAsFactors = F)
#Creates dataframe that contains survey data.
filePath <- siteDirectory$filePath[which(siteDirectory$surveyID==surveyID)]
surveyShapefileName <- siteDirectory$surveyShapefileName[which(siteDirectory$surveyID==surveyID)]
surveyPts <- readOGR(filePath,surveyShapefileName)
surveyPtsDF <- as.data.frame(surveyPts)
#Working directory where files will be output.
wdir<-paste('C:/Users/nharrison/Documents/GitHub/landWaterSoilIPT/streamMorpho/ScienceProcessingCode/R_Metrics',siteID,'Raw_Data',sep="/")
#wdir<-paste('C:/Users/kcawley/Documents/GitHub/landWaterSoilIPT/streamMorpho/ScienceProcessingCode/R_Metrics',siteID,'Raw_Data',sep="/")
#Creates dataframe of all points associated with transect DSC1.
dischargePointsXS1<-subset(surveyPtsDF,MAPCODE=="Transect_DSC1")
dischargePointsXS1<-dischargePointsXS1[order(dischargePointsXS1$N),]
rownames(dischargePointsXS1)<-seq(length=nrow(dischargePointsXS1))
#Sets plot1 settings.
xAxisTitle1<-list(title="Easting (m)",zeroline=FALSE)
yAxisTitle1<-list(title="Northing  (m)",zeroline=FALSE)
font<-list(size=12,color='black')
#Plot the cross section by easting and northing data.
plot_ly(data=dischargePointsXS1,x=~E, y=~N, name='Easting vs Northing', type='scatter', mode='markers', text=~name)%>%
layout(title = siteID, xaxis=xAxisTitle1, yaxis=yAxisTitle1)
#Manually select NorthStart and EastStart coordinates
dischargeXS1NorthStart<-dischargePointsXS1$N[2]
dischargeXS1EastStart<-dischargePointsXS1$E[2]
#Assigns a raw Distance value to each point relative to the NorthStart and EastStart coordinates.
for(i in 1:(length(dischargePointsXS1$name))){
dischargeXS1PointN<-dischargePointsXS1$N[i]
dischargeXS1PointE<-dischargePointsXS1$E[i]
dischargePointsXS1$DistanceRaw[i]<-sqrt(((dischargeXS1PointN-dischargeXS1NorthStart)^2)+((dischargeXS1PointE-dischargeXS1EastStart)^2))
}
#To manually select ReferenceDistance:
dischargeXS1ReferenceDistance<-dischargePointsXS1$DistanceRaw[1]
#Sets Horizontal adjustment value based on reference point coordinate.
dischargeXS1HorizontalAdjust<-0-dischargeXS1ReferenceDistance
#Transforms raw distance to adjusted distance based on reference distance point.
for(i in 1:(length(dischargePointsXS1$name))){
dischargePointsXS1$DistanceAdj[i]<-dischargePointsXS1$DistanceRaw[i]+dischargeXS1HorizontalAdjust
}
#Plot the cross-section again to check reference values and ensure that the profile is being viewed from left to right bank.
#Sets plot2 settings.
xAxisTitle2<-list(title="Distance (m)",zeroline=FALSE)
yAxisTitle2<-list(title="Elevation  (m)",zeroline=FALSE)
font<-list(size=12,color='black')
#Plot the cross section by easting and northing data.
plot_ly(data=dischargePointsXS1,x=~DistanceAdj, y=~H, name='Distance vs Elevation', type='scatter', mode='lines+markers', text=~name)%>%
layout(title = siteID, xaxis=xAxisTitle2, yaxis=yAxisTitle2)
#load packages
require(rgdal)
library(rgdal)
library(plotly)
#NEON Domain number (ex: D01).
domainID<-'D12'
#Four-digit NEON site code (ex: HOPB).
siteID <- 'BLDE'
#The end date of the geomorphology survey (YYYYMMDD).
surveyDate<-'20181026'
#Stipulate 4-digit site code, underscore, and survey year (ex: HOPB_2017).
surveyID <- "BLDE_2018"
#Queues a directory that contains file paths for each site per survey date.
siteDirectory<-read.csv('N:/Science/AQU/Geomorphology_Survey_Data/inputDirectory.csv',head=T,sep=",",stringsAsFactors = F)
#Creates dataframe that contains survey data.
filePath <- siteDirectory$filePath[which(siteDirectory$surveyID==surveyID)]
surveyShapefileName <- siteDirectory$surveyShapefileName[which(siteDirectory$surveyID==surveyID)]
surveyPts <- readOGR(filePath,surveyShapefileName)
surveyPtsDF <- as.data.frame(surveyPts)
#Working directory where files will be output.
wdir<-paste('C:/Users/nharrison/Documents/GitHub/landWaterSoilIPT/streamMorpho/ScienceProcessingCode/R_Metrics',siteID,'Raw_Data',sep="/")
#wdir<-paste('C:/Users/kcawley/Documents/GitHub/landWaterSoilIPT/streamMorpho/ScienceProcessingCode/R_Metrics',siteID,'Raw_Data',sep="/")
#Creates dataframe of all points associated with transect DSC1.
dischargePointsXS1<-subset(surveyPtsDF,mapCode=="Transect_DSC1")
dischargePointsXS1<-dischargePointsXS1[order(dischargePointsXS1$N),]
rownames(dischargePointsXS1)<-seq(length=nrow(dischargePointsXS1))
#Sets plot1 settings.
xAxisTitle1<-list(title="Easting (m)",zeroline=FALSE)
yAxisTitle1<-list(title="Northing  (m)",zeroline=FALSE)
font<-list(size=12,color='black')
#Plot the cross section by easting and northing data.
plot_ly(data=dischargePointsXS1,x=~E, y=~N, name='Easting vs Northing', type='scatter', mode='markers', text=~name)%>%
layout(title = siteID, xaxis=xAxisTitle1, yaxis=yAxisTitle1)
?plot_ly
#load packages
require(rgdal)
library(rgdal)
library(plotly)
#NEON Domain number (ex: D01).
domainID<-'D04'
#Four-digit NEON site code (ex: HOPB).
siteID <- 'CUPE'
#The end date of the geomorphology survey (YYYYMMDD).
surveyDate<-'20180315'
#Stipulate 4-digit site code, underscore, and survey year (ex: HOPB_2017).
surveyID <- "CUPE_2018"
#Queues a directory that contains file paths for each site per survey date.
siteDirectory<-read.csv('N:/Science/AQU/Geomorphology_Survey_Data/inputDirectory.csv',head=T,sep=",",stringsAsFactors = F)
#Creates dataframe that contains survey data.
filePath <- siteDirectory$filePath[which(siteDirectory$surveyID==surveyID)]
surveyShapefileName <- siteDirectory$surveyShapefileName[which(siteDirectory$surveyID==surveyID)]
surveyPts <- readOGR(filePath,surveyShapefileName)
surveyPtsDF <- as.data.frame(surveyPts)
#Working directory where files will be output.
wdir<-paste('C:/Users/nharrison/Documents/GitHub/landWaterSoilIPT/streamMorpho/ScienceProcessingCode/R_Metrics',siteID,'Raw_Data',sep="/")
#wdir<-paste('C:/Users/kcawley/Documents/GitHub/landWaterSoilIPT/streamMorpho/ScienceProcessingCode/R_Metrics',siteID,'Raw_Data',sep="/")
#Creates dataframe of all points associated with transect DSC1.
dischargePointsXS1<-subset(surveyPtsDF,MAPCODE=="Transect_DSC1")
dischargePointsXS1<-dischargePointsXS1[order(dischargePointsXS1$N),]
rownames(dischargePointsXS1)<-seq(length=nrow(dischargePointsXS1))
#Sets plot1 settings.
xAxisTitle1<-list(title="Easting (m)",zeroline=FALSE)
yAxisTitle1<-list(title="Northing  (m)",zeroline=FALSE)
font<-list(size=12,color='black')
#Plot the cross section by easting and northing data.
plot_ly(data=dischargePointsXS1,x=~E, y=~N, name='easting vs northing', type='scatter', mode='markers', text=~name)%>%
layout(title = siteID, xaxis=xAxisTitle1, yaxis=yAxisTitle1)
#load packages
require(rgdal)
library(rgdal)
library(plotly)
#NEON Domain number (ex: D01).
domainID<-'D04'
#Four-digit NEON site code (ex: HOPB).
siteID <- 'GUIL'
#The end date of the geomorphology survey (YYYYMMDD).
surveyDate<-'20180129'
#Stipulate 4-digit site code, underscore, and survey year (ex: HOPB_2017).
surveyID <- "GUIL_2018"
#Queues a directory that contains file paths for each site per survey date.
siteDirectory<-read.csv('N:/Science/AQU/Geomorphology_Survey_Data/inputDirectory.csv',head=T,sep=",",stringsAsFactors = F)
#Creates dataframe that contains survey data.
filePath <- siteDirectory$filePath[which(siteDirectory$surveyID==surveyID)]
surveyShapefileName <- siteDirectory$surveyShapefileName[which(siteDirectory$surveyID==surveyID)]
surveyPts <- readOGR(filePath,surveyShapefileName)
surveyPtsDF <- as.data.frame(surveyPts)
#Working directory where files will be output.
wdir<-paste('C:/Users/nharrison/Documents/GitHub/landWaterSoilIPT/streamMorpho/ScienceProcessingCode/R_Metrics',siteID,'Raw_Data',sep="/")
#wdir<-paste('C:/Users/kcawley/Documents/GitHub/landWaterSoilIPT/streamMorpho/ScienceProcessingCode/R_Metrics',siteID,'Raw_Data',sep="/")
#Creates dataframe of all points associated with transect DSC1.
dischargePointsXS1<-subset(surveyPtsDF,mapCode=="Transect_DSC1")
dischargePointsXS1<-dischargePointsXS1[order(dischargePointsXS1$N),]
rownames(dischargePointsXS1)<-seq(length=nrow(dischargePointsXS1))
View(dischargePointsXS1)
View(surveyPtsDF)
#Creates dataframe of all points associated with transect DSC1.
dischargePointsXS1<-subset(surveyPtsDF,mapCode=="Transect_DSC1_New")
dischargePointsXS1<-dischargePointsXS1[order(dischargePointsXS1$N),]
rownames(dischargePointsXS1)<-seq(length=nrow(dischargePointsXS1))
View(dischargePointsXS1)
View(surveyPtsDF)
#Sets plot1 settings.
xAxisTitle1<-list(title="Easting (m)",zeroline=FALSE)
yAxisTitle1<-list(title="Northing  (m)",zeroline=FALSE)
font<-list(size=12,color='black')
#Plot the cross section by easting and northing data.
plot_ly(data=dischargePointsXS1,x=~E, y=~N, name='Easting vs Northing', type='scatter', mode='markers', text=~name)%>%
layout(title = siteID, xaxis=xAxisTitle1, yaxis=yAxisTitle1)
#NEON Domain number (ex: D01).
domainID<-'D07'
#Four-digit NEON site code (ex: HOPB).
siteID <- 'WALK'
#The end date of the geomorphology survey (YYYYMMDD).
surveyDate<-'20171208'
#Stipulate 4-digit site code, underscore, and survey year (ex: HOPB_2017).
surveyID <- "WALK_2017"
#Queues a directory that contains file paths for each site per survey date.
siteDirectory<-read.csv('N:/Science/AQU/Geomorphology_Survey_Data/inputDirectory.csv',head=T,sep=",",stringsAsFactors = F)
#Creates dataframe that contains survey data.
filePath <- siteDirectory$filePath[which(siteDirectory$surveyID==surveyID)]
surveyShapefileName <- siteDirectory$surveyShapefileName[which(siteDirectory$surveyID==surveyID)]
surveyPts <- readOGR(filePath,surveyShapefileName)
surveyPtsDF <- as.data.frame(surveyPts)
#Working directory where files will be output.
wdir<-paste('C:/Users/nharrison/Documents/GitHub/landWaterSoilIPT/streamMorpho/ScienceProcessingCode/R_Metrics',siteID,'Raw_Data',sep="/")
#wdir<-paste('C:/Users/kcawley/Documents/GitHub/landWaterSoilIPT/streamMorpho/ScienceProcessingCode/R_Metrics',siteID,'Raw_Data',sep="/")
#Creates dataframe of all points associated with transect DSC1.
dischargePointsXS1<-subset(surveyPtsDF,mapCode=="Transect_DSC1")
dischargePointsXS1<-dischargePointsXS1[order(dischargePointsXS1$N),]
rownames(dischargePointsXS1)<-seq(length=nrow(dischargePointsXS1))
#NEON Domain number (ex: D01).
domainID<-'D07'
#Four-digit NEON site code (ex: HOPB).
siteID <- 'WALK'
#The end date of the geomorphology survey (YYYYMMDD).
surveyDate<-'20171208'
#Stipulate 4-digit site code, underscore, and survey year (ex: HOPB_2017).
surveyID <- "WALK_2017"
#Queues a directory that contains file paths for each site per survey date.
siteDirectory<-read.csv('N:/Science/AQU/Geomorphology_Survey_Data/inputDirectory.csv',head=T,sep=",",stringsAsFactors = F)
#Creates dataframe that contains survey data.
filePath <- siteDirectory$filePath[which(siteDirectory$surveyID==surveyID)]
surveyShapefileName <- siteDirectory$surveyShapefileName[which(siteDirectory$surveyID==surveyID)]
surveyPts <- readOGR(filePath,surveyShapefileName)
surveyPtsDF <- as.data.frame(surveyPts)
#Working directory where files will be output.
wdir<-paste('C:/Users/nharrison/Documents/GitHub/landWaterSoilIPT/streamMorpho/ScienceProcessingCode/R_Metrics',siteID,'Raw_Data',sep="/")
#wdir<-paste('C:/Users/kcawley/Documents/GitHub/landWaterSoilIPT/streamMorpho/ScienceProcessingCode/R_Metrics',siteID,'Raw_Data',sep="/")
#Creates dataframe of all points associated with transect DSC1.
dischargePointsXS1<-subset(surveyPtsDF,mapCode=="Transect_DSC1")
dischargePointsXS1<-dischargePointsXS1[order(dischargePointsXS1$N),]
rownames(dischargePointsXS1)<-seq(length=nrow(dischargePointsXS1))
View(surveyPtsDF)
View(dischargePointsXS1)
#load packages
require(rgdal)
library(rgdal)
library(plotly)
#NEON Domain number (ex: D01).
domainID<-'D08'
#Four-digit NEON site code (ex: HOPB).
siteID <- 'MAYF'
#The end date of the geomorphology survey (YYYYMMDD).
surveyDate<-'20171103'
#Stipulate 4-digit site code, underscore, and survey year (ex: HOPB_2017).
surveyID <- "MAYF_2017"
#Queues a directory that contains file paths for each site per survey date.
siteDirectory<-read.csv('N:/Science/AQU/Geomorphology_Survey_Data/inputDirectory.csv',head=T,sep=",",stringsAsFactors = F)
#Creates dataframe that contains survey data.
filePath <- siteDirectory$filePath[which(siteDirectory$surveyID==surveyID)]
surveyShapefileName <- siteDirectory$surveyShapefileName[which(siteDirectory$surveyID==surveyID)]
surveyPts <- readOGR(filePath,surveyShapefileName)
surveyPtsDF <- as.data.frame(surveyPts)
#Working directory where files will be output.
wdir<-paste('C:/Users/nharrison/Documents/GitHub/landWaterSoilIPT/streamMorpho/ScienceProcessingCode/R_Metrics',siteID,'Raw_Data',sep="/")
#wdir<-paste('C:/Users/kcawley/Documents/GitHub/landWaterSoilIPT/streamMorpho/ScienceProcessingCode/R_Metrics',siteID,'Raw_Data',sep="/")
#Creates dataframe of all points associated with transect DSC1.
dischargePointsXS1<-subset(surveyPtsDF,mapCode=="Transect_DSC1")
dischargePointsXS1<-dischargePointsXS1[order(dischargePointsXS1$N),]
rownames(dischargePointsXS1)<-seq(length=nrow(dischargePointsXS1))
View(dischargePointsXS1)
#NEON Domain number (ex: D01).
domainID<-'D10'
#Four-digit NEON site code (ex: HOPB).
siteID <- 'ARIK'
#The end date of the geomorphology survey (YYYYMMDD).
surveyDate<-'20171025'
#Stipulate 4-digit site code, underscore, and survey year (ex: HOPB_2017).
surveyID <- "ARIK_2017"
#Queues a directory that contains file paths for each site per survey date.
siteDirectory<-read.csv('N:/Science/AQU/Geomorphology_Survey_Data/inputDirectory.csv',head=T,sep=",",stringsAsFactors = F)
#Creates dataframe that contains survey data.
filePath <- siteDirectory$filePath[which(siteDirectory$surveyID==surveyID)]
surveyShapefileName <- siteDirectory$surveyShapefileName[which(siteDirectory$surveyID==surveyID)]
surveyPts <- readOGR(filePath,surveyShapefileName)
surveyPtsDF <- as.data.frame(surveyPts)
#Working directory where files will be output.
wdir<-paste('C:/Users/nharrison/Documents/GitHub/landWaterSoilIPT/streamMorpho/ScienceProcessingCode/R_Metrics',siteID,'Raw_Data',sep="/")
#wdir<-paste('C:/Users/kcawley/Documents/GitHub/landWaterSoilIPT/streamMorpho/ScienceProcessingCode/R_Metrics',siteID,'Raw_Data',sep="/")
#Creates dataframe of all points associated with transect DSC1.
dischargePointsXS1<-subset(surveyPtsDF,mapCode=="Transect_DSC1")
dischargePointsXS1<-dischargePointsXS1[order(dischargePointsXS1$N),]
rownames(dischargePointsXS1)<-seq(length=nrow(dischargePointsXS1))
View(dischargePointsXS1)
#load packages
require(rgdal)
library(rgdal)
library(plotly)
#NEON Domain number (ex: D01).
domainID<-'D11'
#Four-digit NEON site code (ex: HOPB).
siteID <- 'PRIN'
#The end date of the geomorphology survey (YYYYMMDD).
surveyDate<-'20170929'
#Stipulate 4-digit site code, underscore, and survey year (ex: HOPB_2017).
surveyID <- "PRIN_2017"
#Queues a directory that contains file paths for each site per survey date.
siteDirectory<-read.csv('N:/Science/AQU/Geomorphology_Survey_Data/inputDirectory.csv',head=T,sep=",",stringsAsFactors = F)
#Creates dataframe that contains survey data.
filePath <- siteDirectory$filePath[which(siteDirectory$surveyID==surveyID)]
surveyShapefileName <- siteDirectory$surveyShapefileName[which(siteDirectory$surveyID==surveyID)]
surveyPts <- readOGR(filePath,surveyShapefileName)
surveyPtsDF <- as.data.frame(surveyPts)
#Working directory where files will be output.
wdir<-paste('C:/Users/nharrison/Documents/GitHub/landWaterSoilIPT/streamMorpho/ScienceProcessingCode/R_Metrics',siteID,'Raw_Data',sep="/")
#wdir<-paste('C:/Users/kcawley/Documents/GitHub/landWaterSoilIPT/streamMorpho/ScienceProcessingCode/R_Metrics',siteID,'Raw_Data',sep="/")
#Creates dataframe of all points associated with transect DSC1.
dischargePointsXS1<-subset(surveyPtsDF,mapCode=="Transect_DSC1")
dischargePointsXS1<-dischargePointsXS1[order(dischargePointsXS1$N),]
rownames(dischargePointsXS1)<-seq(length=nrow(dischargePointsXS1))
#NEON Domain number (ex: D01).
domainID<-'D11'
#Four-digit NEON site code (ex: HOPB).
siteID <- 'PRIN'
#The end date of the geomorphology survey (YYYYMMDD).
surveyDate<-'20170929'
#Stipulate 4-digit site code, underscore, and survey year (ex: HOPB_2017).
surveyID <- "PRIN_2017"
#Queues a directory that contains file paths for each site per survey date.
siteDirectory<-read.csv('N:/Science/AQU/Geomorphology_Survey_Data/inputDirectory.csv',head=T,sep=",",stringsAsFactors = F)
#Creates dataframe that contains survey data.
filePath <- siteDirectory$filePath[which(siteDirectory$surveyID==surveyID)]
surveyShapefileName <- siteDirectory$surveyShapefileName[which(siteDirectory$surveyID==surveyID)]
surveyPts <- readOGR(filePath,surveyShapefileName)
#load packages
require(rgdal)
library(rgdal)
library(plotly)
#NEON Domain number (ex: D01).
domainID<-'D13'
#Four-digit NEON site code (ex: HOPB).
siteID <- 'COMO'
#The end date of the geomorphology survey (YYYYMMDD).
surveyDate<-'20171101'
#Stipulate 4-digit site code, underscore, and survey year (ex: HOPB_2017).
surveyID <- "COMO_2017"
#Queues a directory that contains file paths for each site per survey date.
siteDirectory<-read.csv('N:/Science/AQU/Geomorphology_Survey_Data/inputDirectory.csv',head=T,sep=",",stringsAsFactors = F)
#Creates dataframe that contains survey data.
filePath <- siteDirectory$filePath[which(siteDirectory$surveyID==surveyID)]
surveyShapefileName <- siteDirectory$surveyShapefileName[which(siteDirectory$surveyID==surveyID)]
surveyPts <- readOGR(filePath,surveyShapefileName)
surveyPtsDF <- as.data.frame(surveyPts)
#NEON Domain number (ex: D01).
domainID<-'D15'
#Four-digit NEON site code (ex: HOPB).
siteID <- 'REDB'
#The end date of the geomorphology survey (YYYYMMDD).
surveyDate<-'20171110'
#Stipulate 4-digit site code, underscore, and survey year (ex: HOPB_2017).
surveyID <- "REDB_2017"
#Queues a directory that contains file paths for each site per survey date.
siteDirectory<-read.csv('N:/Science/AQU/Geomorphology_Survey_Data/inputDirectory.csv',head=T,sep=",",stringsAsFactors = F)
#Creates dataframe that contains survey data.
filePath <- siteDirectory$filePath[which(siteDirectory$surveyID==surveyID)]
surveyShapefileName <- siteDirectory$surveyShapefileName[which(siteDirectory$surveyID==surveyID)]
surveyPts <- readOGR(filePath,surveyShapefileName)
surveyPtsDF <- as.data.frame(surveyPts)
#Working directory where files will be output.
wdir<-paste('C:/Users/nharrison/Documents/GitHub/landWaterSoilIPT/streamMorpho/ScienceProcessingCode/R_Metrics',siteID,'Raw_Data',sep="/")
#wdir<-paste('C:/Users/kcawley/Documents/GitHub/landWaterSoilIPT/streamMorpho/ScienceProcessingCode/R_Metrics',siteID,'Raw_Data',sep="/")
#Creates dataframe of all points associated with transect DSC1.
dischargePointsXS1<-subset(surveyPtsDF,mapCode=="Transect_DSC1")
dischargePointsXS1<-dischargePointsXS1[order(dischargePointsXS1$N),]
rownames(dischargePointsXS1)<-seq(length=nrow(dischargePointsXS1))
View(dischargePointsXS1)
#load packages
require(rgdal)
library(rgdal)
library(plotly)
#NEON Domain number (ex: D01).
domainID<-'D19'
#Four-digit NEON site code (ex: HOPB).
siteID <- 'CARI'
#The end date of the geomorphology survey (YYYYMMDD).
surveyDate<-'20170913'
#Stipulate 4-digit site code, underscore, and survey year (ex: HOPB_2017).
surveyID <- "CARI_2017"
#Queues a directory that contains file paths for each site per survey date.
siteDirectory<-read.csv('N:/Science/AQU/Geomorphology_Survey_Data/inputDirectory.csv',head=T,sep=",",stringsAsFactors = F)
#Creates dataframe that contains survey data.
filePath <- siteDirectory$filePath[which(siteDirectory$surveyID==surveyID)]
surveyShapefileName <- siteDirectory$surveyShapefileName[which(siteDirectory$surveyID==surveyID)]
surveyPts <- readOGR(filePath,surveyShapefileName)
surveyPtsDF <- as.data.frame(surveyPts)
#Working directory where files will be output.
wdir<-paste('C:/Users/nharrison/Documents/GitHub/landWaterSoilIPT/streamMorpho/ScienceProcessingCode/R_Metrics',siteID,'Raw_Data',sep="/")
#wdir<-paste('C:/Users/kcawley/Documents/GitHub/landWaterSoilIPT/streamMorpho/ScienceProcessingCode/R_Metrics',siteID,'Raw_Data',sep="/")
#Creates dataframe of all points associated with transect DSC1.
dischargePointsXS1<-subset(surveyPtsDF,mapCode=="Transect_DSC1")
dischargePointsXS1<-dischargePointsXS1[order(dischargePointsXS1$N),]
rownames(dischargePointsXS1)<-seq(length=nrow(dischargePointsXS1))
View(dischargePointsXS1)
